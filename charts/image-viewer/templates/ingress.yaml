{{- if .Values.ingress.enabled -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Values.ingress.name | default "image-viewer-ingress"}}
  labels:
    name: {{.Values.ingress.name | default "image-viewer-ingress"}}
    {{- include "image-viewer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/affinity: "cookie"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    # nginx.ingress.kubernetes.io/server-snippets: |
    #   location / {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-Host $http_host;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Forwarded-For $remote_addr;
    #     proxy_set_header Host $host;
    #     proxy_set_header Connection "upgrade";
    #     proxy_cache_bypass $http_upgrade;
    #   }
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
  - host: {{.Values.ingress.hostname | default "image-viewer.local"}}
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: {{ .Values.services.backendApi.name | default "backend-api" }}
            port: 
              number: {{ .Values.services.backendApi.port }}
  
  {{ if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{.Values.ingress.hostname | default "image-viewer.local"}}
      secretName: {{ .Values.ingress.secretName | default "" }}
  {{ end }}

{{- end }}